@page "/"
@inject INotificationService NotificationService

<PageTitle>Blamato - Helping track your time</PageTitle>

<div class="container">


 @*   <Timer Duration="19"
           OnTimerCompleted="ClientTimerCompleted" />*@

           @if (showRunningTimer)
    {
        
        <Countdown Duration="30"
                      TextColor="TextColor.Primary"
                      ProgressBarColor="Color.Primary"
                      TimerDescription="lets work"
                      OnTimerCompleted="workingTimerCompleted"
                      @ref="workingTimer"
                      />
    }
    else
    {
        
          <Countdown Duration="10"
                      TextColor="TextColor.Dark"
                      ProgressBarColor="Color.Dark"
                      TimerDescription="deserved rest"
                      OnTimerCompleted="restingTimerCompleted"
                      @ref="restingTimer"
                      
                      />
    }



   
          

    <AmbientSounds />
</div>



@code {
    private Countdown workingTimer;
    private Countdown restingTimer;

    private bool showRunningTimer = true;
  

    private async Task workingTimerCompleted(string value)
    {
        Console.WriteLine(value  + " --  WORK DONE");

        showRunningTimer = !showRunningTimer;
        await Task.Delay(2000);
        //restingTimer.StartTimer();
    }
    private async Task restingTimerCompleted(string value)
    {
        Console.WriteLine(value + " --  RESTING GOTOV");
        showRunningTimer = !showRunningTimer;
        await Task.Delay(2000);

        //workingTimer.StartTimer();

    }

    [CascadingParameter] Theme Theme { get; set; }
    private string getRandColor()
    {
        Random rnd = new Random();
        string hexOutput = String.Format("{0:X}", rnd.Next(0, 0xFFFFFF));
        while (hexOutput.Length < 6)
            hexOutput = "0" + hexOutput;


        return "#" + hexOutput;
    }
    Task OnThemeColorChanged()
    {

        string value = getRandColor();


        if (Theme?.ColorOptions != null)
            Theme.ColorOptions.Primary = value;

        if (Theme?.BackgroundOptions != null)
            Theme.BackgroundOptions.Primary = value;


        Theme.ThemeHasChanged();

        return Task.CompletedTask;
    }

}